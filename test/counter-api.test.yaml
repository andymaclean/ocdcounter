name: Counter API end to end tests
vars: 
  httpstem: https://5nhtenar3l.execute-api.us-east-1.amazonaws.com/api/v1/counter
  counterName: e2etest
  expr: '{"counterName":"e2etest"}'
  token: foo

testcases:
- name: group
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/testgroup
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK
    vars:
      id:
        from: result.bodyjson.Id
        default: foo

- name: List Groups
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Groups ShouldContain {{.group.id}}



- name: create
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.counterName}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK
    vars:
      id:
        from: result.bodyjson.Id
        default: foo


- name: List Counters
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Counters.Counters0 ShouldEqual {{.create.id}}

- name: Reset a counter
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}/reset
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK

- name: Set Step Value
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}/step?stepVal=1
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK

- name: Fetch a counter
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.countVal ShouldEqual 0
    - result.bodyjson.stepVal ShouldEqual 1

- name: Increment a counter
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}/increment
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK

- name: Fetch a counter val 1
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.countVal ShouldEqual 1
    - result.bodyjson.stepVal ShouldEqual 1

- name: Decrement a counter
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}/decrement
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK

- name: Fetch a counter val 0
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.countVal ShouldEqual 0
    - result.bodyjson.stepVal ShouldEqual 1


- name: Set Step Value
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}/step?stepVal=50
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK    

- name: Fetch a counter step 50
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.countVal ShouldEqual 0
    - result.bodyjson.stepVal ShouldEqual 50


- name: Increment a counter
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}/increment
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK

- name: Fetch a counter val 50
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.countVal ShouldEqual 50
    - result.bodyjson.stepVal ShouldEqual 50


- name: Set Step Value to 21
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}/step?stepVal=21
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK

- name: Fetch a counter step 21
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.countVal ShouldEqual 50
    - result.bodyjson.stepVal ShouldEqual 21


- name: Decrement a counter
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}/decrement
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK

- name: Fetch a counter val 29
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.countVal ShouldEqual 29
    - result.bodyjson.stepVal ShouldEqual 21

- name: Reset a counter again
  steps:
  - type: http
    method: POST
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}/reset
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK    

- name: Fetch a counter val 0
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.countVal ShouldEqual 0
    - result.bodyjson.stepVal ShouldEqual 21

- name: Delete a counter
  steps:
  - type: http
    method: DELETE
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Result ShouldEqual OK

- name: Fetch a deleted counter fails
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter/{{.create.id}}
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldNotEqual 200

- name: List Counters after delete
  steps:
  - type: http
    method: GET
    url: {{.httpstem}}/api/v1/group/{{.group.id}}/counter
    headers:
      Authorization: {{.token}}
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.Counters.Counters0 ShouldBeEmpty

